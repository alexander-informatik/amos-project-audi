// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package de.osramos.ss13.proj1.model;

import de.osramos.ss13.proj1.model.Taskdb;
import de.osramos.ss13.proj1.model.Userdb;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Taskdb_Roo_Finder {
    
    public static TypedQuery<Taskdb> Taskdb.findTaskdbsById(Long id) {
        if (id == null) throw new IllegalArgumentException("The id argument is required");
        EntityManager em = Taskdb.entityManager();
        TypedQuery<Taskdb> q = em.createQuery("SELECT o FROM Taskdb AS o WHERE o.id = :id", Taskdb.class);
        q.setParameter("id", id);
        return q;
    }
    
    public static TypedQuery<Taskdb> Taskdb.findTaskdbsByPersonEquals(String person) {
        if (person == null || person.length() == 0) throw new IllegalArgumentException("The person argument is required");
        EntityManager em = Taskdb.entityManager();
        TypedQuery<Taskdb> q = em.createQuery("SELECT o FROM Taskdb AS o WHERE o.person = :person", Taskdb.class);
        q.setParameter("person", person);
        return q;
    }
    
    public static TypedQuery<Taskdb> Taskdb.findTaskdbsByTrainee(Userdb trainee) {
        if (trainee == null) throw new IllegalArgumentException("The trainee argument is required");
        EntityManager em = Taskdb.entityManager();
        TypedQuery<Taskdb> q = em.createQuery("SELECT o FROM Taskdb AS o WHERE o.trainee = :trainee", Taskdb.class);
        q.setParameter("trainee", trainee);
        return q;
    }
    
}
