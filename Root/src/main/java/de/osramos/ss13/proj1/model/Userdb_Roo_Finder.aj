// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package de.osramos.ss13.proj1.model;

import de.osramos.ss13.proj1.model.Userdb;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Userdb_Roo_Finder {
    
    public static TypedQuery<Userdb> Userdb.findUserdbsByUsernameAndPasswordEquals(String username, String password) {
        if (username == null || username.length() == 0) throw new IllegalArgumentException("The username argument is required");
        if (password == null || password.length() == 0) throw new IllegalArgumentException("The password argument is required");
        EntityManager em = Userdb.entityManager();
        TypedQuery<Userdb> q = em.createQuery("SELECT o FROM Userdb AS o WHERE o.username = :username AND o.password = :password", Userdb.class);
        q.setParameter("username", username);
        q.setParameter("password", password);
        return q;
    }
    
    public static TypedQuery<Userdb> Userdb.findUserdbsByUsernameEquals(String username) {
        if (username == null || username.length() == 0) throw new IllegalArgumentException("The username argument is required");
        EntityManager em = Userdb.entityManager();
        TypedQuery<Userdb> q = em.createQuery("SELECT o FROM Userdb AS o WHERE o.username = :username", Userdb.class);
        q.setParameter("username", username);
        return q;
    }
    
    public static TypedQuery<Userdb> Userdb.findUserdbsByUserroleEquals(String userrole) {
        if (userrole == null || userrole.length() == 0) throw new IllegalArgumentException("The userrole argument is required");
        EntityManager em = Userdb.entityManager();
        TypedQuery<Userdb> q = em.createQuery("SELECT o FROM Userdb AS o WHERE o.userrole = :userrole", Userdb.class);
        q.setParameter("userrole", userrole);
        return q;
    }
    
}
